[1mdiff --git a/README.md b/README.md[m
[1mindex e215bc4..5dfb3e8 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -1,36 +1,252 @@[m
[31m-This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).[m
[32m+[m[32m# 🎨 PixxelHack - NFT Gallery Platform[m
 [m
[31m-## Getting Started[m
[32m+[m[32m<div align="center">[m
 [m
[31m-First, run the development server:[m
[32m+[m[32m![Next.js](https://img.shields.io/badge/Next.js-14.2.16-black?style=for-the-badge&logo=next.js)[m
[32m+[m[32m![React](https://img.shields.io/badge/React-18.0.0-blue?style=for-the-badge&logo=react)[m
[32m+[m[32m![TypeScript](https://img.shields.io/badge/TypeScript-5.0.0-blue?style=for-the-badge&logo=typescript)[m
[32m+[m[32m![Tailwind CSS](https://img.shields.io/badge/Tailwind_CSS-3.4.17-38B2AC?style=for-the-badge&logo=tailwind-css)[m
 [m
[31m-```bash[m
[31m-npm run dev[m
[31m-# or[m
[31m-yarn dev[m
[31m-# or[m
[31m-pnpm dev[m
[31m-# or[m
[31m-bun dev[m
[32m+[m[32m**A modern, interactive NFT gallery platform built with cutting-edge web technologies**[m
[32m+[m
[32m+[m[32m[Live Demo](#) • [Features](#-features) • [Tech Stack](#-tech-stack) • [Getting Started](#-getting-started)[m
[32m+[m
[32m+[m[32m</div>[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## ✨ Features[m
[32m+[m
[32m+[m[32m### 🎭 **Interactive Gallery Experience**[m
[32m+[m
[32m+[m[32m- **Smooth Animations**: Framer Motion powered transitions and micro-interactions[m
[32m+[m[32m- **Infinite Scrolling**: Seamless browsing through NFT collections[m
[32m+[m[32m- **Hover Effects**: Engaging visual feedback on all interactive elements[m
[32m+[m[32m- **Responsive Design**: Perfect experience across all devices[m
[32m+[m
[32m+[m[32m### 🎨 **Visual Excellence**[m
[32m+[m
[32m+[m[32m- **Modern UI/UX**: Clean, minimalist design with dark theme[m
[32m+[m[32m- **Custom Components**: Reusable, accessible UI components[m
[32m+[m[32m- **Loading States**: Beautiful skeleton loaders and progress indicators[m
[32m+[m[32m- **Color Transitions**: Dynamic color wipes and gradient effects[m
[32m+[m
[32m+[m[32m### 📱 **User Experience**[m
[32m+[m
[32m+[m[32m- **Contact Form**: Fully functional with email notifications[m
[32m+[m[32m- **Artist Showcase**: Dedicated sections for featured artists[m
[32m+[m[32m- **Collector Spotlight**: Highlighting top collectors and their collections[m
[32m+[m[32m- **Newsletter Integration**: Stay updated with latest drops[m
[32m+[m
[32m+[m[32m### 🔧 **Technical Features**[m
[32m+[m
[32m+[m[32m- **TypeScript**: Full type safety and better development experience[m
[32m+[m[32m- **Performance Optimized**: Fast loading with Next.js optimizations[m
[32m+[m[32m- **SEO Ready**: Meta tags and structured data for search engines[m
[32m+[m[32m- **Accessibility**: WCAG compliant components and navigation[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## 🛠️ Tech Stack[m
[32m+[m
[32m+[m[32m| Category          | Technology                   |[m
[32m+[m[32m| ----------------- | ---------------------------- |[m
[32m+[m[32m| **Framework**     | Next.js 14 (App Router)      |[m
[32m+[m[32m| **Language**      | TypeScript                   |[m
[32m+[m[32m| **Styling**       | Tailwind CSS + CSS Modules   |[m
[32m+[m[32m| **Animations**    | Framer Motion                |[m
[32m+[m[32m| **UI Components** | Radix UI + Custom Components |[m
[32m+[m[32m| **Email Service** | Nodemailer (Gmail SMTP)      |[m
[32m+[m[32m| **Deployment**    | Vercel Ready                 |[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## 🚀 Getting Started[m
[32m+[m
[32m+[m[32m### Prerequisites[m
[32m+[m
[32m+[m[32m- Node.js 18+[m
[32m+[m[32m- npm, yarn, pnpm, or bun[m
[32m+[m
[32m+[m[32m### Installation[m
[32m+[m
[32m+[m[32m1. **Clone the repository**[m
[32m+[m
[32m+[m[32m   ```bash[m
[32m+[m[32m   git clone https://github.com/yourusername/nft-gallery.git[m
[32m+[m[32m   cd nft-gallery[m
[32m+[m[32m   ```[m
[32m+[m
[32m+[m[32m2. **Install dependencies**[m
[32m+[m
[32m+[m[32m   ```bash[m
[32m+[m[32m   npm install[m
[32m+[m[32m   # or[m
[32m+[m[32m   yarn install[m
[32m+[m[32m   # or[m
[32m+[m[32m   pnpm install[m
[32m+[m[32m   ```[m
[32m+[m
[32m+[m[32m3. **Set up environment variables**[m
[32m+[m
[32m+[m[32m   ```bash[m
[32m+[m[32m   cp .env.example .env.local[m
[32m+[m[32m   ```[m
[32m+[m
[32m+[m[32m   Add your email configuration:[m
[32m+[m
[32m+[m[32m   ```env[m
[32m+[m[32m   EMAIL_USER=your-gmail@gmail.com[m
[32m+[m[32m   EMAIL_PASS=your-16-character-app-password[m
[32m+[m[32m   ```[m
[32m+[m
[32m+[m[32m4. **Run the development server**[m
[32m+[m
[32m+[m[32m   ```bash[m
[32m+[m[32m   npm run dev[m
[32m+[m[32m   # or[m
[32m+[m[32m   yarn dev[m
[32m+[m[32m   # or[m
[32m+[m[32m   pnpm dev[m
[32m+[m[32m   ```[m
[32m+[m
[32m+[m[32m5. **Open your browser**[m
[32m+[m[32m   Navigate to [http://localhost:3000](http://localhost:3000)[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## 📧 Email Setup[m
[32m+[m
[32m+[m[32m### Gmail Configuration[m
[32m+[m
[32m+[m[32m1. **Enable 2-Step Verification**[m
[32m+[m
[32m+[m[32m   - Go to [Google Account Settings](https://myaccount.google.com/)[m
[32m+[m[32m   - Navigate to Security > 2-Step Verification[m
[32m+[m[32m   - Enable it if not already enabled[m
[32m+[m
[32m+[m[32m2. **Generate App Password**[m
[32m+[m
[32m+[m[32m   - Go to Security > 2-Step Verification > App passwords[m
[32m+[m[32m   - Select "Mail" as the app[m
[32m+[m[32m   - Click "Generate"[m
[32m+[m[32m   - Copy the 16-character password[m
[32m+[m
[32m+[m[32m3. **Update Environment Variables**[m
[32m+[m[32m   ```env[m
[32m+[m[32m   EMAIL_USER=your-actual-gmail@gmail.com[m
[32m+[m[32m   EMAIL_PASS=your-16-character-app-password[m
[32m+[m[32m   ```[m
[32m+[m
[32m+[m[32m### Test Contact Form[m
[32m+[m
[32m+[m[32m1. Start your development server: `npm run dev`[m
[32m+[m[32m2. Go to the contact page[m
[32m+[m[32m3. Fill out and submit the form[m
[32m+[m[32m4. Check your email inbox at `aadilshaikh2164@gmail.com`[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## 📁 Project Structure[m
[32m+[m
[32m+[m[32m```[m
[32m+[m[32mnft-gallery/[m
[32m+[m[32m├── app/                    # Next.js App Router[m
[32m+[m[32m│   ├── api/               # API routes[m
[32m+[m[32m│   ├── contact/           # Contact page[m
[32m+[m[32m│   ├── gallery/           # Gallery page[m
[32m+[m[32m│   └── globals.css        # Global styles[m
[32m+[m[32m├── components/            # Reusable components[m
[32m+[m[32m│   ├── ui/               # Base UI components[m
[32m+[m[32m│   ├── enhanced-*.tsx    # Enhanced components[m
[32m+[m[32m│   └── *.tsx            # Feature components[m
[32m+[m[32m├── lib/                  # Utilities and helpers[m
[32m+[m[32m├── public/               # Static assets[m
[32m+[m[32m│   └── images/          # Image assets[m
[32m+[m[32m└── styles/              # Additional styles[m
 ```[m
 [m
[31m-Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## 🎯 Key Components[m
[32m+[m
[32m+[m[32m### Interactive Elements[m
[32m+[m
[32m+[m[32m- **Enhanced Navigation**: Sticky header with smooth transitions[m
[32m+[m[32m- **Ripple Effect**: Click feedback animations[m
[32m+[m[32m- **Scrambled Text**: Dynamic text animations[m
[32m+[m[32m- **Color Wipe**: Page transition effects[m
[32m+[m[32m- **Distorted Image Hover**: Interactive image effects[m
[32m+[m
[32m+[m[32m### Gallery Features[m
[32m+[m
[32m+[m[32m- **Art Grid**: Responsive grid layout for NFTs[m
[32m+[m[32m- **Infinite Marquee**: Scrolling artist showcases[m
[32m+[m[32m- **Exclusive Drops**: Featured NFT collections[m
[32m+[m[32m- **Artist Showcase**: Dedicated artist profiles[m
[32m+[m
[32m+[m[32m### User Interface[m
[32m+[m
[32m+[m[32m- **Theme Provider**: Dark/light mode support[m
[32m+[m[32m- **Mobile Detection**: Responsive behavior[m
[32m+[m[32m- **Loading States**: Skeleton loaders and spinners[m
[32m+[m[32m- **Toast Notifications**: User feedback system[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## 🚀 Deployment[m
[32m+[m
[32m+[m[32m### Vercel (Recommended)[m
[32m+[m
[32m+[m[32m1. Push your code to GitHub[m
[32m+[m[32m2. Connect your repository to Vercel[m
[32m+[m[32m3. Add environment variables in Vercel dashboard[m
[32m+[m[32m4. Deploy automatically on every push[m
[32m+[m
[32m+[m[32m### Other Platforms[m
[32m+[m
[32m+[m[32m- **Netlify**: Compatible with Next.js[m
[32m+[m[32m- **Railway**: Easy deployment with database[m
[32m+[m[32m- **AWS Amplify**: Full-stack deployment[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## 🤝 Contributing[m
[32m+[m
[32m+[m[32mWe welcome contributions! Please see our [Contributing Guide](CONTRIBUTING.md) for details.[m
[32m+[m
[32m+[m[32m### Development Workflow[m
[32m+[m
[32m+[m[32m1. Fork the repository[m
[32m+[m[32m2. Create a feature branch: `git checkout -b feature/amazing-feature`[m
[32m+[m[32m3. Commit your changes: `git commit -m 'Add amazing feature'`[m
[32m+[m[32m4. Push to the branch: `git push origin feature/amazing-feature`[m
[32m+[m[32m5. Open a Pull Request[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32m## 📄 License[m
 [m
[31m-You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.[m
[32m+[m[32mThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.[m
 [m
[31m-This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.[m
[32m+[m[32m---[m
 [m
[31m-## Learn More[m
[32m+[m[32m## 🙏 Acknowledgments[m
 [m
[31m-To learn more about Next.js, take a look at the following resources:[m
[32m+[m[32m- **Next.js Team** for the amazing framework[m
[32m+[m[32m- **Vercel** for the deployment platform[m
[32m+[m[32m- **Framer Motion** for smooth animations[m
[32m+[m[32m- **Tailwind CSS** for the utility-first CSS framework[m
[32m+[m[32m- **Radix UI** for accessible components[m
 [m
[31m-- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.[m
[31m-- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.[m
[32m+[m[32m---[m
 [m
[31m-You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome![m
[32m+[m[32m<div align="center">[m
 [m
[31m-## Deploy on Vercel[m
[32m+[m[32m**Made with ❤️ by [Your Name]**[m
 [m
[31m-The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.[m
[32m+[m[32m[![GitHub stars](https://img.shields.io/github/stars/yourusername/nft-gallery?style=social)](https://github.com/yourusername/nft-gallery)[m
[32m+[m[32m[![GitHub forks](https://img.shields.io/github/forks/yourusername/nft-gallery?style=social)](https://github.com/yourusername/nft-gallery)[m
[32m+[m[32m[![GitHub issues](https://img.shields.io/github/issues/yourusername/nft-gallery)](https://github.com/yourusername/nft-gallery/issues)[m
 [m
[31m-Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.[m
[32m+[m[32m</div>[m
[1mdiff --git a/app/api/contact/route.ts b/app/api/contact/route.ts[m
[1mindex 7b66d46..dc59582 100644[m
[1m--- a/app/api/contact/route.ts[m
[1m+++ b/app/api/contact/route.ts[m
[36m@@ -1,40 +1,40 @@[m
[31m-import { NextRequest, NextResponse } from 'next/server'[m
[31m-import nodemailer from 'nodemailer'[m
[32m+[m[32mimport { NextRequest, NextResponse } from "next/server";[m
[32m+[m[32mimport nodemailer from "nodemailer";[m
 [m
 export async function POST(request: NextRequest) {[m
   try {[m
[31m-    const { name, email, subject, message } = await request.json()[m
[32m+[m[32m    const { name, email, subject, message } = await request.json();[m
 [m
     // Validate required fields[m
     if (!name || !email || !subject || !message) {[m
       return NextResponse.json([m
[31m-        { error: 'All fields are required' },[m
[32m+[m[32m        { error: "All fields are required" },[m
         { status: 400 }[m
[31m-      )[m
[32m+[m[32m      );[m
     }[m
 [m
     // Validate email format[m
[31m-    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/[m
[32m+[m[32m    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;[m
     if (!emailRegex.test(email)) {[m
       return NextResponse.json([m
[31m-        { error: 'Invalid email format' },[m
[32m+[m[32m        { error: "Invalid email format" },[m
         { status: 400 }[m
[31m-      )[m
[32m+[m[32m      );[m
     }[m
 [m
     // Create transporter using Gmail SMTP[m
     const transporter = nodemailer.createTransporter({[m
[31m-      service: 'gmail',[m
[32m+[m[32m      service: "gmail",[m
       auth: {[m
         user: process.env.EMAIL_USER, // Your Gmail address[m
[31m-        pass: process.env.EMAIL_PASS  // Your Gmail app password[m
[31m-      }[m
[31m-    })[m
[32m+[m[32m        pass: process.env.EMAIL_PASS, // Your Gmail app password[m
[32m+[m[32m      },[m
[32m+[m[32m    });[m
 [m
     // Email content[m
     const mailOptions = {[m
       from: process.env.EMAIL_USER,[m
[31m-      to: 'hello@pixxelhack.com', // Your email where you want to receive messages[m
[32m+[m[32m      to: "aadilshaikh2164@gmail.com", // Your email where you want to receive messages[m
       subject: `Contact Form: ${subject} - ${name}`,[m
       html: `[m
         <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">[m
[36m@@ -51,7 +51,10 @@[m [mexport async function POST(request: NextRequest) {[m
           [m
           <div style="background-color: #fff; padding: 20px; border: 1px solid #dee2e6; border-radius: 8px;">[m
             <h3 style="color: #333; margin-top: 0;">Message</h3>[m
[31m-            <p style="line-height: 1.6; color: #555;">${message.replace(/\n/g, '<br>')}</p>[m
[32m+[m[32m            <p style="line-height: 1.6; color: #555;">${message.replace([m
[32m+[m[32m              /\n/g,[m
[32m+[m[32m              "<br>"[m
[32m+[m[32m            )}</p>[m
           </div>[m
           [m
           <div style="margin-top: 30px; padding-top: 20px; border-top: 1px solid #dee2e6; color: #6c757d; font-size: 14px;">[m
[36m@@ -59,22 +62,21 @@[m [mexport async function POST(request: NextRequest) {[m
             <p>Time: ${new Date().toLocaleString()}</p>[m
           </div>[m
         </div>[m
[31m-      `[m
[31m-    }[m
[32m+[m[32m      `,[m
[32m+[m[32m    };[m
 [m
     // Send email[m
[31m-    await transporter.sendMail(mailOptions)[m
[32m+[m[32m    await transporter.sendMail(mailOptions);[m
 [m
     return NextResponse.json([m
[31m-      { message: 'Email sent successfully' },[m
[32m+[m[32m      { message: "Email sent successfully" },[m
       { status: 200 }[m
[31m-    )[m
[31m-[m
[32m+[m[32m    );[m
   } catch (error) {[m
[31m-    console.error('Email sending error:', error)[m
[32m+[m[32m    console.error("Email sending error:", error);[m
     return NextResponse.json([m
[31m-      { error: 'Failed to send email' },[m
[32m+[m[32m      { error: "Failed to send email" },[m
       { status: 500 }[m
[31m-    )[m
[32m+[m[32m    );[m
   }[m
[31m-} [m
\ No newline at end of file[m
[32m+[m[32m}[m
[1mdiff --git a/app/artists/page.tsx b/app/artists/page.tsx[m
[1mindex a96c63b..0110719 100644[m
[1m--- a/app/artists/page.tsx[m
[1m+++ b/app/artists/page.tsx[m
[36m@@ -1,243 +1,379 @@[m
[31m-"use client"[m
[32m+[m[32m"use client";[m
 [m
[31m-import { motion } from "framer-motion"[m
[31m-import Image from "next/image"[m
[31m-import Navigation from "@/components/navigation"[m
[31m-import RippleEffect from "@/components/ripple-effect"[m
[31m-import ScrambledText from "@/components/scrambled-text"[m
[31m-import { featuredArtists, collections } from "@/lib/data"[m
[32m+[m[32mimport { motion } from "framer-motion";[m
[32m+[m[32mimport Image from "next/image";[m
[32m+[m[32mimport Navigation from "@/components/navigation";[m
[32m+[m[32mimport RippleEffect from "@/components/ripple-effect";[m
[32m+[m[32mimport ScrambledText from "@/components/scrambled-text";[m
[32m+[m[32mimport { featuredArtists, collections } from "@/lib/data";[m
[32m+[m
[32m+[m[32m// Safe toLocaleString function[m
[32m+[m[32mconst safeToLocaleString = (value: any): string => {[m
[32m+[m[32m  try {[m
[32m+[m[32m    if (typeof value === "number" && !isNaN(value)) {[m
[32m+[m[32m      return value.toLocaleString();[m
[32m+[m[32m    } else if (typeof value === "string") {[m
[32m+[m[32m      const parsed = parseInt(value, 10);[m
[32m+[m[32m      if (!isNaN(parsed)) {[m
[32m+[m[32m        return parsed.toLocaleString();[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    return "0";[m
[32m+[m[32m  } catch (error) {[m
[32m+[m[32m    console.error("Error in safeToLocaleString:", error);[m
[32m+[m[32m    return "0";[m
[32m+[m[32m  }[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m// Safe import fallback[m
[32m+[m[32mconst safeFeaturedArtistsImport = () => {[m
[32m+[m[32m  try {[m
[32m+[m[32m    return featuredArtists || [];[m
[32m+[m[32m  } catch (error) {[m
[32m+[m[32m    console.error("Error importing featuredArtists:", error);[m
[32m+[m[32m    return [];[m
[32m+[m[32m  }[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mconst safeCollectionsImport = () => {[m
[32m+[m[32m  try {[m
[32m+[m[32m    return collections || [];[m
[32m+[m[32m  } catch (error) {[m
[32m+[m[32m    console.error("Error importing collections:", error);[m
[32m+[m[32m    return [];[m
[32m+[m[32m  }[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m// Safe data access function[m
[32m+[m[32mconst getSafeArtistData = (artist: any) => {[m
[32m+[m[32m  // Ensure followers is always a number with multiple fallbacks[m
[32m+[m[32m  let followers = 0;[m
[32m+[m[32m  try {[m
[32m+[m[32m    if (typeof artist?.followers === "number" && !isNaN(artist.followers)) {[m
[32m+[m[32m      followers = artist.followers;[m
[32m+[m[32m    } else if (typeof artist?.followers === "string") {[m
[32m+[m[32m      const parsed = parseInt(artist.followers, 10);[m
[32m+[m[32m      followers = isNaN(parsed) ? 0 : parsed;[m
[32m+[m[32m    }[m
[32m+[m[32m  } catch (error) {[m
[32m+[m[32m    console.error("Error processing followers:", error);[m
[32m+[m[32m    followers = 0;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // Ensure artworks is always a number with multiple fallbacks[m
[32m+[m[32m  let artworks = 0;[m
[32m+[m[32m  try {[m
[32m+[m[32m    if (typeof artist?.artworks === "number" && !isNaN(artist.artworks)) {[m
[32m+[m[32m      artworks = artist.artworks;[m
[32m+[m[32m    } else if (typeof artist?.artworks === "string") {[m
[32m+[m[32m      const parsed = parseInt(artist.artworks, 10);[m
[32m+[m[32m      artworks = isNaN(parsed) ? 0 : parsed;[m
[32m+[m[32m    }[m
[32m+[m[32m  } catch (error) {[m
[32m+[m[32m    console.error("Error processing a